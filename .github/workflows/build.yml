name: Build

on:
  push:
    branches:
      - master
    paths:
      - 'xmcl-runtime/**'
      - 'xmcl-runtime-api/**'
      - 'xmcl-keystone-ui/**'
      - 'xmcl-electron-app/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - '.github/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: pnpm/action-setup@v2.0.1
      with:
        version: 6.24.4
    - name: Use Node.js 16
      uses: actions/setup-node@v2
      with:
        node-version: 16
        cache: 'pnpm'
    # - name: Cache electron builder
    #   uses: actions/cache@v2
    #   with:
    #     path: |
    #       ~/.cache/electron
    #       ~/.cache/electron-builder
    #     key: ${{ runner.os }}
    - name: Install
      run: pnpm install --filter=!./xmcl-page
    # - name: Lint
    #   run: |
    #     npm run lint
    - name: Build
      run: |
        pnpm run build --prefix xmcl-keystone-ui
        pnpm run build:all --prefix xmcl-electron-app
      env:
        BUILD_NUMBER: ${{ env.GITHUB_RUN_NUMBER }}
        NODE_ENV: production
        # ELECTRON_CACHE: ~/.cache/electron
        # ELECTRON_BUILDER_CACHE: ~/.cache/electron-builder
    - name: Upload Build
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: |
          xmcl-electron-app/build/output/*.*
          xmcl-electron-app/build/output/nsis-web/*.*
    - name: Upload Zip Build
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}-zip
        path: |
          xmcl-electron-app/build/output/*.zip
    - name: Prepare Asar
      if: ${{ startsWith(github.event.head_commit.message, 'chore(release)') }} 
      run: |
        mkdir asar
        mv xmcl-electron-app/build/output/win-unpacked/resources/app.asar asar/app-${{ runner.os }}.asar
        mv xmcl-electron-app/build/output/win-unpacked/resources/app.asar.sha256 asar/app-${{ runner.os }}.asar.sha256
    - name: Upload Asar
      if: ${{ startsWith(github.event.head_commit.message, 'chore(release)') }} 
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: |
          asar/*.*

  build-appx:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: pnpm/action-setup@v2.0.1
      with:
        version: 6.24.4
    - name: Use Node.js 16
      uses: actions/setup-node@v2
      with:
        node-version: 16
        cache: 'pnpm'
    - name: Install
      run: pnpm install --filter=!./xmcl-page
    - name: Build
      run: |
        pnpm run build --prefix xmcl-keystone-ui
        pnpm run build --prefix xmcl-electron-app
      env:
        BUILD_NUMBER: ${{ env.GITHUB_RUN_NUMBER }}
        NODE_ENV: production
        BUILD_TARGET: appx
    - name: Upload Build
      uses: actions/upload-artifact@v2
      with:
        name: appx
        path: |
          xmcl-electron-app/build/output/*.*
    
  build-appimage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: pnpm/action-setup@v2.0.1
      with:
        version: 6.24.4
    - name: Use Node.js 16
      uses: actions/setup-node@v2
      with:
        node-version: 16
        cache: 'pnpm'
    - name: Install
      run: pnpm install --filter=!./xmcl-page
    - name: Build
      run: |
        pnpm run build --prefix xmcl-keystone-ui
        pnpm run build --prefix xmcl-electron-app
      env:
        BUILD_NUMBER: ${{ env.GITHUB_RUN_NUMBER }}
        NODE_ENV: production
        BUILD_TARGET: appimage
    - name: Upload Build
      uses: actions/upload-artifact@v2
      with:
        name: appimage
        path: |
          xmcl-electron-app/build/output/*.*

  prepare-release:
    runs-on: ubuntu-latest
    needs: 
      - build
      - build-appx
      - build-appimage
    if: ${{ !startsWith(github.event.head_commit.message, 'chore(release)') }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0
    - uses: pnpm/action-setup@v2.0.1
      with:
        version: 6.24.4
    - name: Use Node.js 16
      uses: actions/setup-node@v2
      with:
        node-version: 16
    - name: Install
      run: |
        pnpm install --filter ./.github/actions
    - name: Bump Version
      id: version
      uses: Voxelum/semantic-version-bump-action@master
      with:
        packages: |
          ./xmcl-keystone-ui
          ./xmcl-runtime
          ./xmcl-runtime-api
        root: ./xmcl-electron-app
        read-root-commits: true
    - name: Update Lock File
      if: ${{ steps.version.outputs.release == 'true' }}
      run: pnpm i --lockfile-only
    - name: Create Pull Request
      if: ${{ steps.version.outputs.release == 'true' }}
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore(release): version ${{ steps.version.outputs.version }}"
        title: Prepare Release ${{ steps.version.outputs.version }}
        body: ${{ steps.version.outputs.changelog }}
        reviewers: ci010
        assignees: ci010
        branch: prepare-release

  release:
    if: startsWith(github.event.head_commit.message, 'chore(release)')
    runs-on: ubuntu-latest
    needs:
      - build
      - build-appx
      - build-appimage
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: pnpm/action-setup@v2.0.1
      with:
        version: 6.24.4
    - name: Use Node.js 16
      uses: actions/setup-node@v2
      with:
        node-version: 16
        cache: 'pnpm'
    - name: Install
      run: |
        pnpm install --filter ./.github/actions
    - name: Download Build
      uses: actions/download-artifact@v2
      with:
        name: build
        path: build
    - name: Download Appx Build
      uses: actions/download-artifact@v2
      with:
        name: appx
        path: build
    - name: Download AppImage Build
      uses: actions/download-artifact@v2
      with:
        name: appimage
        path: build
    - name: Generate MCBBS content
      uses: ./.github/actions/generate-mcbbs-content
    - name: Upload Mcbbs Content
      uses: actions/upload-artifact@v2
      with:
        name: mcbbs
        path: mcbbs
    - name: Prepare Release
      id: prepare_release
      uses: ./.github/actions/prepare-release
    - name: Create Tag
      uses: rickstaa/action-create-tag@v1
      with:
        tag: ${{ steps.prepare_release.outputs.tag }}
        message: ${{ steps.prepare_release.outputs.release }}
    - name: Draft Release
      id: create_release
      uses: voxelum/create-release@xmcl
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.prepare_release.outputs.tag }}
        release_name: ${{ steps.prepare_release.outputs.release }}
        draft: true
        prerelease: false
        body: ${{ steps.prepare_release.outputs.body }}
        asset_dir_path: ./build
    - name: Echo sign command
      run: |
        echo "Please use following script to sign the app in the PC with credential!"
        echo "pnpm --package=https://github.com/Voxelum/xmcl-release-script dlx xmcl-release-script ${{ steps.create_release.outputs.release_id }} ${{ steps.create_release.outputs.appx_asset_id }}"
